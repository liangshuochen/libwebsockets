# This is the CMakeCache file.
# For build in directory: /Volumes/MacintoshHD/Documents/work/otherTest/libwebsockets-1.6.1/iosbuild
# It was generated by CMake: /Applications/CMake.app/Contents/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a program.
CMAKE_AR:FILEPATH=CMAKE_AR-NOTFOUND

//Build type
CMAKE_BUILD_TYPE:STRING=Release

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//iOS find search path root
CMAKE_FIND_ROOT_PATH:STRING=/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer;/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS10.2.sdk

//Path to a program.
CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Location of iOS Platform
CMAKE_IOS_DEVELOPER_ROOT:PATH=/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer

//Location of the selected iOS SDK
CMAKE_IOS_SDK_ROOT:PATH=/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS10.2.sdk

//Path to a program.
CMAKE_LINKER:FILEPATH=CMAKE_LINKER-NOTFOUND

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=CMAKE_NM-NOTFOUND

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=CMAKE_OBJCOPY-NOTFOUND

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=CMAKE_OBJDUMP-NOTFOUND

//Build architecture for iOS
CMAKE_OSX_ARCHITECTURES:STRING=$(ARCHS_STANDARD_32_BIT)

//Minimum OS X version to target for deployment (at runtime); newer
// APIs weak linked. Set to empty string for default value.
CMAKE_OSX_DEPLOYMENT_TARGET:STRING=

//Sysroot used for iOS support
CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS10.2.sdk

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=libwebsockets

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=CMAKE_STRIP-NOTFOUND

//No help, variable specified on the command line.
CMAKE_TOOLCHAIN_FILE:UNINITIALIZED=/Volumes/MacintoshHD/Documents/work/otherTest/toolchain/ios-cmake/toolchain/iOS.cmake

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Enable to build OSX bundles
CPACK_BINARY_BUNDLE:BOOL=OFF

//Enable to build Debian packages
CPACK_BINARY_DEB:BOOL=OFF

//Enable to build OSX Drag And Drop package
CPACK_BINARY_DRAGNDROP:BOOL=OFF

//Enable to build IFW packages
CPACK_BINARY_IFW:BOOL=OFF

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=OFF

//Enable to build OSX X11 packages
CPACK_BINARY_OSXX11:BOOL=OFF

//Enable to build PackageMaker packages
CPACK_BINARY_PACKAGEMAKER:BOOL=OFF

//Enable to build RPM packages
CPACK_BINARY_RPM:BOOL=OFF

//Enable to build STGZ packages
CPACK_BINARY_STGZ:BOOL=ON

//Enable to build TBZ2 packages
CPACK_BINARY_TBZ2:BOOL=OFF

//Enable to build TGZ packages
CPACK_BINARY_TGZ:BOOL=ON

//Enable to build TXZ packages
CPACK_BINARY_TXZ:BOOL=OFF

//git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//Type of iOS Platform
IOS_PLATFORM:STRING=OS

//Libwebsockets include directories
LIBWEBSOCKETS_INCLUDE_DIRS:PATH=/Volumes/MacintoshHD/Documents/work/otherTest/libwebsockets-1.6.1/lib;/Volumes/MacintoshHD/Documents/work/otherTest/libwebsockets-1.6.1/iosbuild

//Libwebsocket libraries
LIBWEBSOCKETS_LIBRARIES:STRING=websockets

//Libwebsocket static library
LIBWEBSOCKETS_LIBRARIES_STATIC:STRING=websocket

//Installation directory for executables
LWS_INSTALL_BIN_DIR:PATH=bin

//Installation directory for CMake files
LWS_INSTALL_CMAKE_DIR:PATH=lib/cmake/libwebsockets

//Installation directory for example files
LWS_INSTALL_EXAMPLES_DIR:PATH=bin

//Installation directory for header files
LWS_INSTALL_INCLUDE_DIR:PATH=include

//Installation directory for libraries
LWS_INSTALL_LIB_DIR:PATH=lib

//No help, variable specified on the command line.
LWS_IPHONE:UNINITIALIZED=TRUE

//Compile with support for ipv6
LWS_IPV6:BOOL=TRUE

//Path to the libev include directory
LWS_LIBEV_INCLUDE_DIRS:PATH=

//Path to the libev library
LWS_LIBEV_LIBRARIES:PATH=

//Link the test apps to the shared version of the library. Default
// is to link statically
LWS_LINK_TESTAPPS_DYNAMIC:BOOL=OFF

//Platform is MBED3
LWS_MBED3:BOOL=OFF

//Server SSL certificate directory
LWS_OPENSSL_CLIENT_CERTS:PATH=../share

//Path to the OpenSSL include directory
LWS_OPENSSL_INCLUDE_DIRS:PATH=/usr/local/Cellar/openssl/1.0.2j/include

//Path to the OpenSSL library
LWS_OPENSSL_LIBRARIES:PATH=/usr/local/Cellar/openssl/1.0.2j/lib/libssl.a

//SSL support should make use of the OS-installed CA root certs
LWS_SSL_CLIENT_USE_OS_CA_CERTS:BOOL=ON

//Use bundled zlib version (Windows only)
LWS_USE_BUNDLED_ZLIB:BOOL=OFF

//Use CyaSSL replacement for OpenSSL. When setting this, you also
// need to specify LWS_CYASSL_LIBRARIES and LWS_CYASSL_INCLUDE_DIRS
LWS_USE_CYASSL:BOOL=OFF

//Use wolfSSL replacement for OpenSSL. When setting this, you also
// need to specify LWS_WOLFSSL_LIBRARIES and LWS_WOLFSSL_INCLUDE_DIRS
LWS_USE_WOLFSSL:BOOL=OFF

//Don't use the BSD getifaddrs implementation from libwebsockets
// if it is missing (this will result in a compilation error) ...
// The default is to assume that your libc provides it. On some
// systems such as uclibc it doesn't exist.
LWS_WITHOUT_BUILTIN_GETIFADDRS:BOOL=OFF

//Don't build the lws sha-1 (eg, because openssl will provide it
LWS_WITHOUT_BUILTIN_SHA1:BOOL=OFF

//Don't build the client part of the library
LWS_WITHOUT_CLIENT:BOOL=OFF

//Don't build the daemonization api
LWS_WITHOUT_DAEMONIZE:BOOL=ON

//Don't compile with extensions
LWS_WITHOUT_EXTENSIONS:BOOL=OFF

//Don't build the server part of the library
LWS_WITHOUT_SERVER:BOOL=OFF

//Don't build the libwebsocket-test-apps
LWS_WITHOUT_TESTAPPS:BOOL=OFF

//Don't build the client test application
LWS_WITHOUT_TEST_CLIENT:BOOL=OFF

//Don't build the ping test application
LWS_WITHOUT_TEST_FRAGGLE:BOOL=OFF

//Don't build the ping test application
LWS_WITHOUT_TEST_PING:BOOL=OFF

//Don't build the test server
LWS_WITHOUT_TEST_SERVER:BOOL=OFF

//Don't build the test server version that uses external poll
LWS_WITHOUT_TEST_SERVER_EXTPOLL:BOOL=OFF

//Compile with support for http2
LWS_WITH_HTTP2:BOOL=OFF

//Build latency measuring code into the library
LWS_WITH_LATENCY:BOOL=OFF

//Compile with support for libev
LWS_WITH_LIBEV:BOOL=OFF

//Build the shared version of the library
LWS_WITH_SHARED:BOOL=OFF

//Include SSL support (default OpenSSL, wolfSSL if LWS_USE_WOLFSSL
// is set)
LWS_WITH_SSL:BOOL=ON

//Build the static version of the library
LWS_WITH_STATIC:BOOL=ON

//Include zlib support (required for extensions)
LWS_WITH_ZLIB:BOOL=ON

//Path to the wolfSSL include directory
LWS_WOLFSSL_INCLUDE_DIRS:PATH=

//Path to the wolfSSL library
LWS_WOLFSSL_LIBRARIES:PATH=

//Path to the zlib include directory
LWS_ZLIB_INCLUDE_DIRS:PATH=

//Path to the zlib library
LWS_ZLIB_LIBRARIES:PATH=

//Openssl executable
OPENSSL_EXECUTABLE:FILEPATH=OPENSSL_EXECUTABLE-NOTFOUND

//No help, variable specified on the command line.
OPENSSL_USE_STATIC_LIBS:UNINITIALIZED=TRUE

//The RPM builder tool
RPMTools_RPMBUILD_EXECUTABLE:FILEPATH=RPMTools_RPMBUILD_EXECUTABLE-NOTFOUND

//No help, variable specified on the command line.
WS_WITH_SSL:UNINITIALIZED=OFF

//Path to a file.
ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS10.2.sdk/usr/include

//Path to a library.
ZLIB_LIBRARY_DEBUG:FILEPATH=ZLIB_LIBRARY_DEBUG-NOTFOUND

//Path to a library.
ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS10.2.sdk/usr/lib/libz.tbd

//Value Computed by CMake
libwebsockets_BINARY_DIR:STATIC=/Volumes/MacintoshHD/Documents/work/otherTest/libwebsockets-1.6.1/iosbuild

//Value Computed by CMake
libwebsockets_SOURCE_DIR:STATIC=/Volumes/MacintoshHD/Documents/work/otherTest/libwebsockets-1.6.1

//Dependencies for the target
websockets_LIB_DEPENDS:STATIC=general;/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS10.2.sdk/usr/lib/libz.tbd;general;/usr/local/Cellar/openssl/1.0.2j/lib/libssl.a;general;m;


########################
# INTERNAL cache entries
########################

//Stored Xcode object GUID
ALL_BUILD_GUID_CMAKE:INTERNAL=9975CA42778B45BB8C7635F5
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/Volumes/MacintoshHD/Documents/work/otherTest/libwebsockets-1.6.1/iosbuild
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=5
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=0
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/Applications/CMake.app/Contents/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/Applications/CMake.app/Contents/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/Applications/CMake.app/Contents/bin/ctest
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Xcode
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/Volumes/MacintoshHD/Documents/work/otherTest/libwebsockets-1.6.1
//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/Applications/CMake.app/Contents/share/cmake-3.5
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_BUNDLE
CPACK_BINARY_BUNDLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_DEB
CPACK_BINARY_DEB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_DRAGNDROP
CPACK_BINARY_DRAGNDROP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_IFW
CPACK_BINARY_IFW-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_OSXX11
CPACK_BINARY_OSXX11-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_PACKAGEMAKER
CPACK_BINARY_PACKAGEMAKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_RPM
CPACK_BINARY_RPM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_STGZ
CPACK_BINARY_STGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TBZ2
CPACK_BINARY_TBZ2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TGZ
CPACK_BINARY_TGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TXZ
CPACK_BINARY_TXZ-ADVANCED:INTERNAL=1
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[/usr/bin/git][v()]
//Details about finding ZLIB
FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS10.2.sdk/usr/lib/libz.tbd][/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS10.2.sdk/usr/include][v1.2.8()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Have function bzero
LWS_HAVE_BZERO:INTERNAL=
//Have include dlfcn.h
LWS_HAVE_DLFCN_H:INTERNAL=
//Have include fcntl.h
LWS_HAVE_FCNTL_H:INTERNAL=
//Have function fork
LWS_HAVE_FORK:INTERNAL=
//Have function getenv
LWS_HAVE_GETENV:INTERNAL=
//Have function getifaddrs
LWS_HAVE_GETIFADDRS:INTERNAL=
//Have include in6addr.h
LWS_HAVE_IN6ADDR_H:INTERNAL=
//Have include inttypes.h
LWS_HAVE_INTTYPES_H:INTERNAL=
//Have function malloc
LWS_HAVE_MALLOC:INTERNAL=
//Have include memory.h
LWS_HAVE_MEMORY_H:INTERNAL=
//Have function memset
LWS_HAVE_MEMSET:INTERNAL=
//Have include netinet/in.h
LWS_HAVE_NETINET_IN_H:INTERNAL=
//Have function realloc
LWS_HAVE_REALLOC:INTERNAL=
//Have function socket
LWS_HAVE_SOCKET:INTERNAL=
//Have include stdint.h
LWS_HAVE_STDINT_H:INTERNAL=
//Have include stdlib.h
LWS_HAVE_STDLIB_H:INTERNAL=
//Have function strerror
LWS_HAVE_STRERROR:INTERNAL=
//Have include strings.h
LWS_HAVE_STRINGS_H:INTERNAL=
//Have include string.h
LWS_HAVE_STRING_H:INTERNAL=
//Have include sys/prctl.h
LWS_HAVE_SYS_PRCTL_H:INTERNAL=
//Have include sys/socket.h
LWS_HAVE_SYS_SOCKET_H:INTERNAL=
//Have include sys/stat.h
LWS_HAVE_SYS_STAT_H:INTERNAL=
//Have include sys/types.h
LWS_HAVE_SYS_TYPES_H:INTERNAL=
//Have include unistd.h
LWS_HAVE_UNISTD_H:INTERNAL=
//Have function vfork
LWS_HAVE_VFORK:INTERNAL=
//Have include vfork.h
LWS_HAVE_VFORK_H:INTERNAL=
//Have include zlib.h
LWS_HAVE_ZLIB_H:INTERNAL=
//Test LWS_HAVE___inline
LWS_HAVE___inline:INTERNAL=
//Test LWS_HAVE___inline__
LWS_HAVE___inline__:INTERNAL=
//Test LWS_HAVE_inline
LWS_HAVE_inline:INTERNAL=
//ADVANCED property for variable: OPENSSL_EXECUTABLE
OPENSSL_EXECUTABLE-ADVANCED:INTERNAL=1
//Stored Xcode object GUID
PROJECT_libwebsockets_GUID_CMAKE:INTERNAL=D6B68E7D9191409D8FCCE993
//Have includes stdlib.h;stdarg.h;string.h;float.h
STDC_HEADERS:INTERNAL=
//Stored Xcode object GUID
ZERO_CHECK_GUID_CMAKE:INTERNAL=DAE58082F17B43068236BBB0
//ADVANCED property for variable: ZLIB_INCLUDE_DIR
ZLIB_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_DEBUG
ZLIB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_RELEASE
ZLIB_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//Stored Xcode object GUID
dist_GUID_CMAKE:INTERNAL=7E9EFDAE87A84C10B62A87D7
//Stored Xcode object GUID
install_GUID_CMAKE:INTERNAL=6AD37A78110D4DFCA7F114F1
//Stored Xcode object GUID
package_GUID_CMAKE:INTERNAL=6E72543E58294661B083D512
//Stored Xcode object GUID
test-client_GUID_CMAKE:INTERNAL=3F09E8869D6943E09884E1AB
//Stored Xcode object GUID
test-echo_GUID_CMAKE:INTERNAL=3638D2928F384058A69254D9
//Stored Xcode object GUID
test-fraggle_GUID_CMAKE:INTERNAL=D4223C72492F440888DC7994
//Stored Xcode object GUID
test-ping_GUID_CMAKE:INTERNAL=3D827B3D71D34CF39C5DC186
//Stored Xcode object GUID
test-server-extpoll_GUID_CMAKE:INTERNAL=F277016B648847E7BDD9A39D
//Stored Xcode object GUID
test-server-pthreads_GUID_CMAKE:INTERNAL=0615402CC67B44E589B03A5B
//Stored Xcode object GUID
test-server_GUID_CMAKE:INTERNAL=69AB437C6B114789A3BB635C
//Stored Xcode object GUID
websockets_GUID_CMAKE:INTERNAL=C4BDD79E7D1E4C97AB77FA23

